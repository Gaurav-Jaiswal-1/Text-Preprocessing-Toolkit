name: Python Package CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11'] # Test on multiple Python versions

    steps:
      # Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      # Install dependencies and run tests with Tox
      - name: Run tests with Tox
        run: |
          python -m pip install --upgrade pip
          pip install tox
          tox

  lint:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: pip

      # Install dependencies and run linting with Tox
      - name: Run linting with Tox
        run: |
          python -m pip install --upgrade pip
          pip install tox
          tox -e lint

  type-check:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: pip

      # Install dependencies and run type-checking with Tox
      - name: Run type-checking with Tox
        run: |
          python -m pip install --upgrade pip
          pip install tox
          tox -e type-check

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' # Deploy only on push to main branch

    steps:
      # Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: pip

      # Install build tools and dependencies
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox build twine

      # Build the package with Tox
      - name: Build package with Tox
        run: tox -e build

      # Publish to PyPI
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
