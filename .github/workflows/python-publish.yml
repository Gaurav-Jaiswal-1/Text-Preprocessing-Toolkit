name: Python Package CI/CD Workflow

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on pull request to the main branch

permissions:
  contents: read
  id-token: write

jobs:
  # Job to run tests across multiple Python versions
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']  # Test across multiple Python versions

    steps:
      # Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip  # Cache pip dependencies

      # Install dependencies and run tests using tox
      - name: Install dependencies and run tests
        run: |
          python -m pip install --upgrade pip
          pip install tox
          tox

  # Job to run linting checks
  lint:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: pip

      # Install dependencies and run linting
      - name: Install dependencies and run linting
        run: |
          python -m pip install --upgrade pip
          pip install tox
          tox -e lint  # Run linting with tox

  # Job to perform type checking
  type-check:
    runs-on: ubuntu-latest
    steps:
      # Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: pip

      # Install dependencies and run type-checking
      - name: Install dependencies and run type-checking
        run: |
          python -m pip install --upgrade pip
          pip install tox
          tox -e type-check  # Run type checking with tox

  # Job to deploy the package to PyPI
  deploy:
    needs: [test, lint, type-check]  # Deploy after tests, linting, and type-checking pass
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'  # Deploy only on push to main

    steps:
      # Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: pip

      # Install build tools and dependencies
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      # Build the package
      - name: Build package
        run: python -m build  # Build the distribution package

      # Publish the package to PyPI
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__  # Use the GitHub token
          password: ${{ secrets.PYPI_API_TOKEN }}  # Retrieve PyPI token from GitHub secrets
