name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test with Multiple Python Versions
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']  # Test on multiple Python versions

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      # Run tests using tox
      - name: Run tests
        run: tox

  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Use a specific version for linting
          cache: pip

      # Install linting dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox flake8 black

      # Run linting
      - name: Run linting
        run: tox -e lint

  type-check:
    name: Static Type Checking
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Use a specific version for type-checking
          cache: pip

      # Install type-checking dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox mypy

      # Run type checking
      - name: Run type checking
        run: tox -e type-check

  docs:
    name: Documentation Build
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Use a specific version for documentation generation
          cache: pip

      # Install documentation dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx-rtd-theme tox

      # Build documentation
      - name: Build documentation
        run: tox -e docs
